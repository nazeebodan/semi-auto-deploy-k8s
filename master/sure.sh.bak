
#!/bin/bash

#######Begin########
echo "It will install k8s-master."
sleep 1

##check last command is OK or not.
check_ok() {
        if [ $? != 0 ]
                then
                echo "Error, Check the error log."
                exit 1
        fi
}

##some env

hostname=`hostname`
baseDir="/softdb"
file="kubernetes-server-linux-amd64.tar.gz"
serviceDir="/lib/systemd/system"
mkdir -p /etc/kubernetes/

function closeSelinux(){
        echo "step:------> close selinux config"
	sleep 1
        sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
        selinux_s=`getenforce`
        if [ $selinux_s == "enforcing" ]
                then
                setenforce 0
        fi
	check_ok
}

function backService(){
        if [  -f "$serviceDir/$1" ]; then
		echo "step:------>backup service config file "$1
        	sleep 1
		mv $serviceDir/$1 $serviceDir/$1.bak
        fi
}

function closeIptables(){
	echo "step:------> stop iptables "
	sleep 1
        iptables-save > /etc/sysconfig/iptables_`date +%s`
        iptables -F
        systemctl stop iptables
}

function createKubeletConfig(){
	echo "step:------> create kubelet config "
	sleep 1
        sed -e "s/yourhostname/$hostname/g" $baseDir/master/kubelet > $baseDir/master/kubelet.$hostname
	check_ok
        cp $baseDir/master/kubelet.$hostname /etc/kubernetes/
	mv /etc/kubernetes/kubelet.$hostname /etc/kubernetes/kubelet
	rm -rf $baseDir/master/kubelet.$hostname
	check_ok
	echo "step:------> create kubelet service config "
	sleep 1
	backService kubelet.service
        cp $baseDir/master/kubelet.service $serviceDir/kubelet.service 
	echo "step:------> startup kubelet "
	sleep 1
	systemctl daemon-reload
	systemctl enable kubelet
	systemctl start kubelet
	#systemctl status kubelet
	check_ok
}

function createK8scomponents(){
        if [ ! -f "$file" ]; then
                echo "$file is not exist!"
                exit 0
        fi
	echo "step:------> unzip k8s-package"
	sleep 1
        tar -zxf $file
        cd kubernetes
	echo "step:------> copy kube-node components to /usr/bin"
	sleep 1
	rm -rf /usr/bin/kube*
        cp -r server/bin/{kubectl,kube-proxy,kubelet} /usr/bin/
        chmod 755 /usr/bin/kube*
	rm -rf kubernetes
}


closeSelinux
createK8scomponents
createKubeletConfig
#echo "k8s-node installed complete!"
